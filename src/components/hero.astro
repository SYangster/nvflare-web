---
import NvidiaLogo from '../images/nvidia_eye.png'
---
<div class="bg-white">
  <div
    class="relative isolate overflow-hidden bg-gradient-to-b from-0% from-nvidia-light-test">
    <div
      class="mx-auto max-w-7xl pb-24 pt-10 sm:pb-32 lg:grid lg:grid-cols-2 lg:gap-x-8 lg:px-8 lg:py-12">
      <div class="px-6 lg:px-0 lg:pt-4">
        <div class="mx-auto max-w-2xl">
          <div class="max-w-lg">
            <div class="mt-24 sm:mt-32 lg:mt-16">
              <a
                href="https://nvflare.readthedocs.io/en/main/whats_new.html"
                class="inline-flex space-x-6">
                <span
                  class="rounded-full bg-nvidia/10 px-3 py-1 text-sm font-semibold leading-6 text-nvidia ring-1 ring-inset ring-nvidia/10"
                  >What's new</span
                >
                <span
                  class="inline-flex items-center space-x-2 text-sm font-medium leading-6 text-gray-600">
                  <span>Just shipped v2.4</span>
                  <svg
                    class="h-5 w-5 text-gray-400"
                    viewBox="0 0 20 20"
                    fill="currentColor"
                    aria-hidden="true">
                    <path
                      fill-rule="evenodd"
                      d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z"
                      clip-rule="evenodd"></path>
                  </svg>
                </span>
              </a>
            </div>
            <img class="mt-6 flex items-center" src={NvidiaLogo.src} width=40% height=40% alt="NVIDIA logo">
            <h1
              class="mt-10 text-4xl font-bold tracking-tight text-gray-900 sm:text-6xl">
              NVIDIA FLARE
            </h1>
            <p class="mt-4 text-lg leading-8 text-gray-600">
              NVIDIA FLARE™ (NVIDIA Federated Learning Application Runtime
              Environment) is a domain-agnostic, open-source, and extensible SDK
              for Federated Learning. It allows researchers and data scientists
              to adapt existing ML/DL workflow to a federated paradigm and
              enables platform developers to build a secure, privacy-preserving
              offering for a distributed multi-party collaboration.
            </p>
            <div class="mt-10 flex items-center gap-x-6">
              <a
                href="https://nvflare.readthedocs.io/en/main/index.html"
                class="rounded-md bg-nvidia px-3.5 py-2.5 text-sm font-semibold text-white shadow-sm hover:bg-green-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-nvidia"
                >Documentation</a
              >
              <a
                href="https://github.com/NVIDIA/NVFlare"
                class="text-sm font-semibold leading-6 text-gray-900"
                >View on GitHub <span aria-hidden="true">→</span></a
              >
            </div>
          </div>
        </div>
      </div>
      <div
        class="mt-20 sm:mt-24 md:mx-auto md:max-w-2xl lg:mx-0 lg:mt-0 lg:w-screen">
        <div class="shadow-lg md:rounded-3xl">
          <div
            class="bg-nvidia [clip-path:inset(0)] md:[clip-path:inset(0_round_theme(borderRadius.3xl))]">
            <div class="relative px-6 pt-8 sm:pt-16 md:pl-16 md:pr-0">
              <div class="mx-auto max-w-2xl md:mx-0 md:max-w-none">
                <div class="w-screen overflow-hidden rounded-tl-xl bg-gray-900">
                  <div class="flex bg-gray-800/40 ring-1 ring-white/5">
                    <div
                      class="-mb-px flex text-sm font-medium leading-6 text-gray-400">
                      <div
                        class="border-b border-r border-b-white/20 border-r-white/10 bg-white/5 px-4 py-2 text-white">
                        train.py
                      </div>
                      <div class="border-r border-gray-600/10 px-4 py-2">
                        fedavg.py
                      </div>
                    </div>
                  </div>
                  <pre
                    class="-ml-12 text-[0.8125rem] leading-2 text-gray-300"
                    style="tab-size: 2">
                      <code>
                        {`# import nvflare client API
                          import nvflare.client as flare

                          # initialize NVFlare client API
                          flare.init()

                          # run continuously when launching once
                          while flare.is_running():

                            # receive FLModel from NVFlare
                            input_model = flare.receive()

                            # loads model from NVFlare
                            net.load_state_dict(input_model.params)

                            # perform local training and evaluation on received model
                            {existing centralized deep learning code} ...

                            # construct output FLModel
                            output_model = flare.FLModel(
                                params=net.cpu().state_dict(),
                                metrics={"accuracy": accuracy},
                                meta={"NUM_STEPS_CURRENT_ROUND": steps},
                            )

                            # send model back to NVFlare
                            flare.send(output_model)
                        `}
                        <!-- {`{
                          "format_version": 2,
                          "executors": [{
                              "tasks": ["train", "submit_model", "get_weights"],
                              "executor": {
                                "path": "cifar10trainer.Cifar10Trainer",
                                "args": {
                                  "lr": 0.01,
                                  "epochs": 1
                                }
                              }
                            },
                            {
                              "tasks": ["validate"],
                              "executor": {
                                "path": "cifar10validator.Cifar10Validator",
                                "args": {}
                              }
                            }
                          ],
                          "task_result_filters": [],
                          "task_data_filters": [],
                          "components": []
                        }`} -->
                      </code>
                    </pre>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
