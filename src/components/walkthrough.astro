---
// @ts-ignore
import BlazeSlider from 'blaze-slider';
import 'blaze-slider/dist/blaze.css';

import Glide from '@glidejs/glide';

const config = {
  type: 'carousel',
  startAt: 0,
  perView: 4,
  gap: 32,
  breakpoints: {
    1280: {
      perView: 3,
    },
    1024: {
      perView: 2,
    },
    768: {
      perView: 1,
    }
  }
};



const walkthrough = [
  {
    id: "step1",
    step: "Step 1",
    title: "Introduction to FLARE",
    description:
      "In this introductory guide we cover the core concepts and fundamentals of FLARE to help you get started.",
    button_text: "View Notebook",
    link: "https://github.com/NVIDIA/NVFlare/blob/7055e1ad2adc97c114678f65f36b189f8641ef3e/examples/getting_started/pt/nvflare_pt_getting_started.ipynb",
    video: "https://nvidia-my.sharepoint.com/personal/seyang_nvidia_com/_layouts/15/embed.aspx?UniqueId=5e1b5b52-1bfc-49a2-995d-64cff4370c67&embed=%7B%22hvm%22%3Atrue%2C%22ust%22%3Atrue%7D&referrer=StreamWebApp&referrerScenario=EmbedDialog.Create",
  },
  {
    id: "step2",
    step: "Step 2",
    title: "Server and Client Code",
    description:
      "We dive into an end-to-end federated learning example going through the CIFAR-10 PyTorch FL code shown below.",
    button_text: "View Notebook",
    link: "https://github.com/NVIDIA/NVFlare/blob/7055e1ad2adc97c114678f65f36b189f8641ef3e/examples/getting_started/pt/nvflare_pt_getting_started.ipynb",
    video: "https://nvidia-my.sharepoint.com/personal/seyang_nvidia_com/_layouts/15/embed.aspx?UniqueId=b2fd1012-cfd7-4c03-b91a-e922f990df3a&embed=%7B%22hvm%22%3Atrue%2C%22ust%22%3Atrue%7D&referrer=StreamWebApp&referrerScenario=EmbedDialog.Create",
  },
  {
    id: "step3",
    step: "Step 3",
    title: "FedJob and Simulator",
    description:
      "Formulate a FLARE job and easily run it with the multi-process simulator.",
    button_text: "View Notebook",
    link: "https://github.com/NVIDIA/NVFlare/blob/7055e1ad2adc97c114678f65f36b189f8641ef3e/examples/getting_started/pt/nvflare_pt_getting_started.ipynb",
    video: "https://nvidia-my.sharepoint.com/personal/seyang_nvidia_com/_layouts/15/embed.aspx?UniqueId=09560ecb-f0b6-44b7-9913-033a853e890d&embed=%7B%22hvm%22%3Atrue%2C%22ust%22%3Atrue%7D&referrer=StreamWebApp&referrerScenario=EmbedDialog.Create",
  },
  {
    id: "step4",
    step: "Step 4",
    title: "Federated Kaplan-Meier",
    description:
      "Learn how to formulate a data analysis algorithm under a federated setting using Kaplan-Meier survival analysis.",
    button_text: "View Example",
    link: "https://github.com/NVIDIA/NVFlare/tree/main/examples/advanced/kaplan-meier-he",
    video: "https://nvidia-my.sharepoint.com/personal/ziyuex_nvidia_com/_layouts/15/embed.aspx?UniqueId=fd7e3e23-df96-40d4-a1ce-0440c98c3bd2&embed=%7B%22hvm%22%3Atrue%2C%22ust%22%3Atrue%7D&referrer=StreamWebApp&referrerScenario=EmbedDialog.Create",
  },
  {
    id: "step5",
    step: "Step 5",
    title: "Learn More",
    description:
      "Finally, we cover the next steps in taking federated learning from simulation to the real world.",
    button_text: "View Notebook",
    link: "https://colab.research.google.com/github/NVIDIA/NVFlare/blob/main/examples/tutorials/flare_simulator.ipynb",
    video: "https://nvidia-my.sharepoint.com/personal/seyang_nvidia_com/_layouts/15/embed.aspx?UniqueId=bd0c2cbe-514c-4bb8-a37a-230bba95eae0&embed=%7B%22ust%22%3Atrue%7D&referrer=StreamWebApp&referrerScenario=EmbedDialog.Create",
  },
  // {
  //   id: "step1",
  //   step: "Step 1",
  //   title: "Getting Started: FedAvg and CIFAR-10",
  //   description:
  //     "In this introductory guide, we cover the core concepts and fundamentals of FLARE and dive into the CIFAR-10 PyTorch example FL code above.",
  //   button_text: "View Notebook",
  //   link: "https://github.com/NVIDIA/NVFlare/blob/7055e1ad2adc97c114678f65f36b189f8641ef3e/examples/getting_started/pt/nvflare_pt_getting_started.ipynb",
  //   video: "https://nvidia-my.sharepoint.com/personal/hroth_nvidia_com/_layouts/15/embed.aspx?UniqueId=7a6067cf-940c-4e68-9981-27e634c900d7&embed=%7B%22hvm%22%3Atrue%2C%22ust%22%3Atrue%7D&referrer=StreamWebApp&referrerScenario=EmbedDialog.Create",
  // },
  // {
  //   id: "step2",
  //   step: "Step 2",
  //   title: "Federated Machine Learning: Kaplan-Meier Analysis",
  //   description:
  //     "Learn how to formulate a data analysis algorithm under a federated setting using the survival analysis tool Kaplan-Meier.",
  //   button_text: "View Example",
  //   link: "https://github.com/NVIDIA/NVFlare/tree/main/examples/advanced/kaplan-meier-he",
  //   video: "https://nvidia-my.sharepoint.com/personal/ziyuex_nvidia_com/_layouts/15/embed.aspx?UniqueId=fd7e3e23-df96-40d4-a1ce-0440c98c3bd2&embed=%7B%22hvm%22%3Atrue%2C%22ust%22%3Atrue%7D&referrer=StreamWebApp&referrerScenario=EmbedDialog.Create",
  // },
  // {
  //   id: "step3",
  //   step: "Step 3",
  //   title: "From Simulation to Real-World",
  //   description:
  //     "Finally, we cover the next steps in taking federated learning from simulation to the real world.",
  //   button_text: "View Notebook",
  //   link: "https://colab.research.google.com/github/NVIDIA/NVFlare/blob/main/examples/tutorials/flare_simulator.ipynb",
  //   video: "https://www.youtube.com/embed/videoseries?si=Kh5pFJBo1PK8hR0H&amp;list=PLZHnYvH1qtObpziP9mZ3RYOefIj-6vfbV",
  // },
  // {
  //   id: "step1",
  //   step: "Step 1",
  //   title: "Introduction to FLARE",
  //   description:
  //     "In this introductory guide, we cover the core concepts and fundamentals of FLARE to help get you started.",
  //   button_text: "View Notebook",
  //   link: "https://github.com/NVIDIA/NVFlare/blob/7055e1ad2adc97c114678f65f36b189f8641ef3e/examples/getting_started/pt/nvflare_pt_getting_started.ipynb",
  //   video: "https://nvidia-my.sharepoint.com/personal/hroth_nvidia_com/_layouts/15/embed.aspx?UniqueId=7a6067cf-940c-4e68-9981-27e634c900d7&embed=%7B%22hvm%22%3Atrue%2C%22ust%22%3Atrue%7D&referrer=StreamWebApp&referrerScenario=EmbedDialog.Create",
  // },
  // {
  //   id: "step2",
  //   step: "Step 2",
  //   title: "Using the FLARE APIs",
  //   description:
  //     "Learn about the user-friendly Client, Controller, and Job APIs designed to easily enable programming for a federated setting.",
  //   button_text: "View Notebook",
  //   link: "https://colab.research.google.com/github/NVIDIA/NVFlare/blob/main/examples/tutorials/flare_simulator.ipynb",
  //   video: "https://nvidia-my.sharepoint.com/personal/ziyuex_nvidia_com/_layouts/15/embed.aspx?UniqueId=fd7e3e23-df96-40d4-a1ce-0440c98c3bd2&embed=%7B%22hvm%22%3Atrue%2C%22ust%22%3Atrue%7D&referrer=StreamWebApp&referrerScenario=EmbedDialog.Create",
  // },
  // {
  //   id: "step3",
  //   step: "Step 3",
  //   title: "End-to-end Federated Learning Application",
  //   description:
  //     "Finally, we showcase a complete end-to-end example of how to use FLARE to create a federated learning application.",
  //   button_text: "View Notebook",
  //   link: "https://colab.research.google.com/github/NVIDIA/NVFlare/blob/main/examples/tutorials/flare_simulator.ipynb",
  //   video: "https://www.youtube.com/embed/videoseries?si=Kh5pFJBo1PK8hR0H&amp;list=PLZHnYvH1qtObpziP9mZ3RYOefIj-6vfbV",
  // },
];
---

<div class="bg-gray-50 py-24 sm:py-24">
  <div class="mx-auto max-w-7xl px-6 lg:px-8">
    <div class="mt-16 md:mt-0 text-center">
      <h2 class="text-4xl lg:text-5xl font-bold lg:tracking-tight">
        Getting Started with FLARE
      </h2>
      <p class="text-lg mt-4 text-slate-600 w-3/4 m-auto">
        Begin your NVIDIA FLARE journey with these guides
        designed to help you quickly grasp essential concepts.
        Follow along with the videos below, and try it out yourself in the notebooks.
      </p>
    </div>

    <!-- <div class="mt-5 mb-10 border-b border-gray-200 dark:border-gray-700">
      <ul class="flex flex-wrap -mb-px text-xl font-medium text-center place-content-evenly space-x-10" id="default-styled-tab" data-tabs-toggle="#default-styled-tab-content" data-tabs-active-classes="text-nvidia hover:text-nvidia dark:text-nvidia-light dark:hover:text-nvidia-light border-nvidia dark:border-nvidia-light" data-tabs-inactive-classes="dark:border-transparent text-gray-500 hover:text-gray-600 dark:text-gray-400 border-transparent hover:border-gray-300 dark:border-gray-700 dark:hover:text-gray-300" role="tablist">
          <li class="me-2" role="presentation">
              <button class="inline-block p-4 border-b-2 rounded-t-lg font-bold" id="client-tab" data-tabs-target="#tutorials-wrapper" type="button" role="tab" aria-controls="profile" aria-selected="false">Tools</button>
          </li>
          <li class="me-2" role="presentation">
              <button class="inline-block p-4 border-b-2 rounded-t-lg font-bold hover:text-gray-600 hover:border-gray-300 dark:hover:text-gray-300" id="controller-tab" data-tabs-target="#tutorials-wrapper2" type="button" role="tab" aria-controls="dashboard" aria-selected="false">Deployment</button>
          </li>
          <li class="me-2" role="presentation">
              <button class="inline-block p-4 border-b-2 rounded-t-lg font-bold hover:text-gray-600 hover:border-gray-300 dark:hover:text-gray-300" id="job-tab" data-tabs-target="#tutorials-wrapper3" type="button" role="tab" aria-controls="settings" aria-selected="false">Examples</button>
          </li>
      </ul>
    </div> -->

    
    <div class="glide px-20 py-8 bg-gray-50 bg-opacity-60 rounded-3xl">
      <div class="glide__track" data-glide-el="track">
        <ul class="glide__slides">
          {
            walkthrough.map((item) => (
              <li class="slider__frame glide__slide m-6 p-4 transition-shadow ease-in-out duration-200" id={item.id} role="presentation">
                <div class="text-left h-44" aria-controls="profile" aria-selected="false">
                  <span class="flex items-center text-sm font-semibold leading-6 text-nvidia">
                    {item.step}
                    <div
                      class="absolute -ml-2 h-px w-screen -translate-x-full bg-gray-900/10 sm:-ml-4 lg:static lg:-mr-6 lg:ml-8 lg:w-auto lg:flex-auto lg:translate-x-0"
                      aria-hidden="true"
                    />
                  </span>
                  <p class="mt-6 text-lg font-semibold leading-8 tracking-tight text-gray-900">
                    {item.title}
                  </p>
                  <p class="mt-1 text-base leading-7 text-gray-600">
                    {item.description}
                  </p>
                </div>
                <p class="mt-16" role="presentation">
                    <a
                      href={item.link}
                      class="text-sm font-semibold leading-6 text-green-600">
                      {item.button_text} <span aria-hidden="true">→</span>
                    </a>
                  </p>
              </li>
            ))
          }
        </ul>
        <!-- <ul class="glide__slides" data-tabs-toggle="#default-styled-tab-content1" data-tabs-active-classes="" data-tabs-inactive-classes="opacity-60" role="tablist">
        {
          walkthrough.map((item) => (
            <li class="slider__frame glide__slide" role="presentation">
              <button class="text-left h-44" id={item.step + "tab"} data-tabs-target={"#" + item.id} type="button" role="tab" aria-controls="profile" aria-selected="false">
                <span class="flex items-center text-sm font-semibold leading-6 text-nvidia">
                  {item.step}
                  <div
                    class="absolute -ml-2 h-px w-screen -translate-x-full bg-gray-900/10 sm:-ml-4 lg:static lg:-mr-6 lg:ml-8 lg:w-auto lg:flex-auto lg:translate-x-0"
                    aria-hidden="true"
                  />
                </span>
                <p class="mt-6 text-lg font-semibold leading-8 tracking-tight text-gray-900">
                  {item.title}
                </p>
                <p class="mt-1 text-base leading-7 text-gray-600">
                  {item.description}
                </p>
              </button>
              <p class="mt-16" role="presentation">
                  <a
                    href={item.link}
                    class="text-sm font-semibold leading-6 text-green-600">
                    {item.button_text} <span aria-hidden="true">→</span>
                  </a>
                </p>
            </li>
          ))
        }
        </ul> -->



        <!-- <ul class="glide__slides">
          <li class="glide__slide">
            <div class="relative flex flex-col text-center bg-gray-800 h-40 items-center justify-center rounded-3xl duration-300 ease-in-out">
              <span class="absolute w-4 h-4 rounded-full bg-red-200 right-4 top-4"></span>
              <span class="text-5xl font-semibold px-6 py-4 bg-red-200 text-gray-800 rounded-full mb-4">
                A
              </span>
              <span class="text-red-200 font-bold">
                BLOCK A
              </span>
            </div>
          </li>
          <li class="glide__slide">     
            <div class="relative flex flex-col text-center bg-gray-800 h-40 items-center justify-center rounded-3xl">
              <span class="absolute w-4 h-4 rounded-full bg-red-200 right-4 top-4"></span>
              <span class="text-5xl font-semibold px-6 py-4 bg-red-200 text-gray-800 rounded-full mb-4">
                B
              </span>
              <span class="text-red-200 font-bold">
                BLOCK B
              </span>
            </div>
          </li>
          <li class="glide__slide">
            <div class="relative flex flex-col text-center bg-gray-800 h-40 items-center justify-center rounded-3xl">
              <span class="absolute w-4 h-4 rounded-full bg-red-200 right-4 top-4"></span>
              <span class="text-5xl font-semibold px-6 py-4 bg-red-200 text-gray-800 rounded-full mb-4">
                C
              </span>
              <span class="text-red-200 font-bold">
                BLOCK C
              </span>
            </div>
          </li>
          <li class="glide__slide">
            <div class="relative flex flex-col text-center bg-gray-800 h-40 items-center justify-center rounded-3xl">
              <span class="absolute w-4 h-4 rounded-full bg-red-200 right-4 top-4"></span>
              <span class="text-5xl font-semibold px-6 py-4 bg-red-200 text-gray-800 rounded-full mb-4">
                D
              </span>
              <span class="text-red-200 font-bold">
                BLOCK D
              </span>
            </div>
          </li> 
          <li class="glide__slide">
            <div class="relative flex flex-col text-center bg-gray-800 h-40 items-center justify-center rounded-3xl">
              <span class="absolute w-4 h-4 rounded-full bg-red-200 right-4 top-4"></span>
              <span class="text-5xl font-semibold px-6 py-4 bg-red-200 text-gray-800 rounded-full mb-4">
                E
              </span>
              <span class="text-red-200 font-bold">
                BLOCK E
              </span>
            </div>
          </li> 
        </ul> -->
      </div>
      <div class="glide__arrows" data-glide-el="controls">
        <button class="glide__arrow glide__arrow--left left-0 shadow-none border-none" data-glide-dir="<">
          <!-- <div class="h-14 w-14 flex justify-center items-center"> -->
            <!-- <i class="fas fa-angle-left text-red-200 text-2xl"></i> -->
          <svg class="stroke-nvidia w-12 h-12 text-gray-800 dark:text-white" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="3" d="m15 19-7-7 7-7"/>
          </svg>                     
          <!-- </div> -->
        </button>
        <div class="glide__bullets" data-glide-el="controls[nav]">
          {
            walkthrough.map((item, index) => (
              <button class="glide__bullet h-3 w-3 bg-gray-200 shadow-md" data-glide-dir={"="+index}></button>
            ))
          }
        </div>
        <button class="glide__arrow glide__arrow--right right-0 shadow-none border-none" data-glide-dir=">">
          <!-- <div class="h-9 w-9 bg-gray-800 rounded-xl flex justify-center items-center my-auto hover:bg-red-200 duration-300 ease-in-out"> -->
          <div class="h-14 w-14 flex justify-center items-center">  
            <svg class="stroke-nvidia w-12 h-12 text-gray-800 dark:text-white" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="3" d="m9 5 7 7-7 7"/>
            </svg>            
          </div>
        </button>
      </div>
    </div>

    <!-- <div class="mx-auto grid max-w-2xl grid-cols-1 gap-8 overflow-hidden lg:mx-0 lg:max-w-none lg:grid-cols-5 mt-10" data-tabs-toggle="#default-styled-tab-content1" data-tabs-active-classes="" data-tabs-inactive-classes="opacity-60" role="tablist">
      {
        walkthrough.map((item) => (
          <div role="presentation">
            <button class="text-left h-44" id={item.step + "tab"} data-tabs-target={"#" + item.id} type="button" role="tab" aria-controls="profile" aria-selected="false">
              <span class="flex items-center text-sm font-semibold leading-6 text-nvidia">
                {item.step}
                <div
                  class="absolute -ml-2 h-px w-screen -translate-x-full bg-gray-900/10 sm:-ml-4 lg:static lg:-mr-6 lg:ml-8 lg:w-auto lg:flex-auto lg:translate-x-0"
                  aria-hidden="true"
                />
              </span>
              <p class="mt-6 text-lg font-semibold leading-8 tracking-tight text-gray-900">
                {item.title}
              </p>
              <p class="mt-1 text-base leading-7 text-gray-600">
                {item.description}
              </p>
            </button>
            <p class="mt-16" role="presentation">
                <a
                  href={item.link}
                  class="text-sm font-semibold leading-6 text-green-600">
                  {item.button_text} <span aria-hidden="true">→</span>
                </a>
              </p>
          </div>
        ))
      }
    </div> -->

    <div>
      {
        walkthrough.map((item) => (
          <div id={item.id+"-video"} class="mt-24 flex flex-wrap place-content-center hidden">
            <iframe
              class="h-3/4 w-3/4 aspect-video"
              src={item.video}
              title={item.title}
              allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
              allowfullscreen>
            </iframe>
          </div>
        ))
      }
    </div>
  
    <div class="mt-32 text-center">
      <p class="text-lg mt-4 mb-8 text-slate-600 w-3/4 m-auto">
        Now that you understand the basics of FLARE, explore our catalog of various tutorials and examples showcasing everything from the core features of FLARE   to advanced applications.
      </p>
      <a
        href="/nvflare-web/catalog"
        class="rounded-md bg-nvidia px-3.5 py-2.5 text-mg font-semibold text-white shadow-sm hover:bg-green-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-nvidia"
        >Tutorial Catalog -></a
      >
    </div>
  </div>
</div>

<script src="@glidejs/glide/dist/glide.min.js"></script>

<script>
  // import Glide, { Controls, Breakpoints } from 'node_modules/@glidejs/glide/dist/glide.modular.esm.js';

  import Glide from '@glidejs/glide';

  // new Glide('.glide').mount({ Controls, Breakpoints })
  const config = {
    type: 'slider',
    animationDuration: 300,
    rewind: true,
    bound: false,
    focusAt: 0,
    startAt: 0,
    perView: 3,
    gap: 32,
    breakpoints: {
      1280: {
        perView: 3,
      },
      1024: {
        perView: 2,
      },
      768: {
        perView: 1,
      }
    },
  };
  var glide = new Glide('.glide', config).mount();

  glide.on('move.after', function(event) {
    // store the background in a variable
    // var active_slide = document.querySelectorAll('.glide__slide--active');
    // console.log("active_slide", active_slide);
    // active_slide[0].classList.add("bg-white");

    var slides = document.querySelectorAll('.glide__slide');
    slides.forEach((slide) => {
      var video = document.getElementById(slide.id + "-video");
      if (slide.classList.contains('glide__slide--active')) {
        slide.classList.add("shadow-lg");
        video?.classList.remove("hidden");
      } else {
        slide.classList.remove("shadow-lg");
        video?.classList.add("hidden");
      }
    });

    var bullets = document.querySelectorAll('.glide__bullet');
    bullets.forEach((bullet) => {
      if (bullet.classList.contains('glide__bullet--active')) {
        // bullet.classList.add("ring-nvidia");
        // bullet.classList.add("b");
        bullet.classList.replace("bg-gray-200", "bg-white");
        // bullet.classList.add("bg-gray-400");
      } else {
        // bullet.classList.remove("ring-nvidia");
        // bullet.classList.remove("ring-2");
        // bullet.classList.add("bg-gray-200");
        // bullet.classList.remove("bg-gray-400");
        bullet.classList.replace("bg-white", "bg-gray-200");
      }
    });
    // apply the background image to the element (html or body...whatever you're using)
    // $('body').css('background-image', 'url(' + newBG + ')');
  });

//   $(document).ready(function() {
//     var glide = new Glide('.glide')

//     // Listen to the move.after event (Called right after movement transition ends.)
//     glide.on('move.after', function() {
//       // Get the active slide and store it's data-image 
//       const imageSrc = $('.glide__slide--active').attr('image');

//       // Set the background
//       $('html').css('background-image', 'url(' + imageSrc + ')');
//     })

//     glide.mount()
// });

</script>
